{"version":3,"sources":["layouts/main/Header.tsx","layouts/main/Footer.tsx","layouts/main/index.tsx","components/AnswerContainer.tsx","components/Button.tsx","pages/quiz/Quiz.tsx","configs/config.ts","pages/result/Result.tsx","pages/intro/Intro.tsx","pages/main/index.tsx","routes.tsx","index.tsx"],"names":["Header","className","Footer","href","MainLayout","route","fallback","renderRoutes","routes","AnswerContainer","answers","isSelected","onChangeAnswer","useRouteMatch","map","item","idx","clsx","selected","index","onClick","dangerouslySetInnerHTML","__html","Button","children","disabled","type","Quiz","quiz","isLoading","onSelectAnswer","onGoNextPage","match","question","answer","params","config","url","ResultPage","result","startTime","history","useHistory","currentTime","moment","useState","duration","diff","asSeconds","toFixed","numberOfCorrectAnswers","filter","length","push","Intro","goNextPage","MainPage","search","window","location","urlParams","useMemo","URLSearchParams","isOnResultPage","setIsOnResultPage","setIsLoading","quizIndex","setQuizIndex","setQuiz","setResult","correctAnswer","setCorrectAnswer","setIsSelected","shuffleAnswers","sort","Math","random","pathname","useEffect","timeout","setTimeout","axios","method","then","response","data","results","answerList","incorrect_answers","correct_answer","catch","err","console","log","get","clearTimeout","Backdrop","open","CircularProgress","selectedAnswer","arr","handleChangeAnswer","component","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.849a5b72.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.scss'\n\nfunction Header(): JSX.Element {\n  return (\n    <header className=\"quiz-header\">\n      <div className=\"header-title\">QUIZ QUIZ MINUS</div>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport './Footer.scss'\n\nfunction Footer(): JSX.Element {\n  return (<footer className=\"quiz-footer\">\n    <div className=\"info\">\n      <p className=\"name\">Juwon Chun</p>\n      <a className=\"url\" href=\"github.io/dasbeerboot\">github.com/dasbeerboot</a>\n    </div>\n  </footer>)\n}\n\nexport default Footer\n","import React, { Suspense } from 'react'\nimport { renderRoutes, RouteConfig } from 'react-router-config'\nimport './index.scss'\nimport Header from './Header'\nimport Footer from './Footer'\n\nfunction MainLayout({ route }: RouteConfig): JSX.Element {\n  return (\n    <main className=\"main-layout-container\">\n      <Header />\n      <section className=\"main-contents-container\">\n        <Suspense fallback={<div>loading</div>}>{renderRoutes(route.routes)}</Suspense>\n      </section>\n      <Footer />\n    </main>\n  )\n}\n\nexport default MainLayout\n","import React from 'react'\nimport { useRouteMatch } from 'react-router-dom'\nimport clsx from 'clsx'\nimport './AnswerContainer.scss'\n\nexport interface AnswerContainerIProps {\n  answers: string[]\n  isSelected: { selected: boolean; index: number }\n  onChangeAnswer: (index: number, answer: string) => void\n}\nfunction AnswerContainer({\n  answers,\n  isSelected,\n  onChangeAnswer,\n}: AnswerContainerIProps): JSX.Element {\n  const match = useRouteMatch<{ index: string }>()\n  return (\n    <section className=\"answer-container\">\n      <ol className=\"answer-list\">\n        {answers.map((item, idx) => (\n          <li\n            className={clsx(\n              'item',\n              (isSelected.selected && isSelected.index === idx) ? 'selected' : '',\n            )}\n            key={idx}\n            onClick={() => onChangeAnswer(idx, item)}\n            dangerouslySetInnerHTML={{ __html: item }}\n          ></li>\n        ))}\n      </ol>\n    </section>\n  )\n}\n\nexport default AnswerContainer\n","import React from 'react'\nimport './Button.scss'\nimport clsx from 'clsx'\n\nexport interface ButtonIProps extends React.HTMLAttributes<HTMLButtonElement> {\n  children: React.ReactNode\n  className?: string\n  disabled?: boolean\n  onClick?: () => void\n}\n\nfunction Button({ children, className, disabled, onClick }: ButtonIProps): JSX.Element {\n  return (\n    <button className={clsx('btn', className)} onClick={onClick} type=\"button\" disabled={disabled}>\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n","import React, { useMemo } from 'react'\nimport { IQuiz } from '../../models/quiz'\nimport AnswerContainer from '../../components/AnswerContainer'\nimport { useRouteMatch } from 'react-router-dom'\nimport Button from '../../components/Button'\nimport './Quiz.scss'\n\nexport interface QuizIProps {\n  quiz: IQuiz | undefined\n  isSelected: { selected: boolean; index: number }\n  isLoading: boolean\n  onSelectAnswer: (index: number, answer: string) => void\n  onGoNextPage: () => void\n}\n\nfunction Quiz({\n  quiz,\n  isSelected,\n  isLoading,\n  onSelectAnswer,\n  onGoNextPage,\n}: QuizIProps): JSX.Element {\n  const match = useRouteMatch<{ index: string }>()\n\n  if (!quiz) return <div></div>\n  return (\n    <article className=\"quiz-container\">\n      <div className=\"quiz-title\">\n        <h2>\n          <div dangerouslySetInnerHTML={{ __html: quiz.question }}></div>\n        </h2>\n      </div>\n      <div className=\"quiz-content\">\n        <AnswerContainer\n          answers={quiz.answers}\n          isSelected={isSelected}\n          onChangeAnswer={(index: number, answer: string) => onSelectAnswer(index, answer)}\n        />\n      </div>\n        <Button onClick={onGoNextPage} disabled={isLoading || !isSelected.selected}>\n          {match.params.index !== '4' ? 'next' : 'view result'}\n        </Button>\n    </article>\n  )\n}\n\nexport default Quiz\n","const config = {\n  url: 'https://opentdb.com/api.php?amount=1&category=9&difficulty=medium&type=multiple',\n}\n\nexport default config\n","import React, { useState } from 'react'\nimport moment from 'moment'\nimport './Result.scss'\nimport Button from '../../components/Button'\nimport { useHistory } from 'react-router-dom'\n\ninterface ResultPageIProps {\n  result: boolean[]\n  startTime: moment.Moment\n}\n\nfunction ResultPage({ result,startTime }: ResultPageIProps): JSX.Element {\n  const history = useHistory()\n  const currentTime = moment()\n  const [duration, setDuration] = useState(moment.duration(currentTime.diff(startTime)).asSeconds().toFixed(0))\n\n\n  const numberOfCorrectAnswers = result.filter((item) => item === true).length\n  return (\n    <article className=\"result-container\">\n      <div className=\"well-done\">\n        수고하셨습니다!\n      </div>\n      <div className=\"score\">\n        당신의 점수는 <span className=\"value\">{numberOfCorrectAnswers * 20}</span>({numberOfCorrectAnswers}/5) 점이며\n      </div>\n      <div className=\"duration\">\n        총 소요시간은 <span className=\"value\">{duration}</span>초, \n      </div>\n      <div className=\"answers\">맞은 문제는  \n      <span className=\"value\">\n      {numberOfCorrectAnswers}</span>개, 틀린 문제는 <span className=\"value\">{5 - numberOfCorrectAnswers}</span>개 입니다.</div>\n      \n      {\n        numberOfCorrectAnswers === 5 && \n        <div className=\"show-me-the-money\">\n          당신의 손에 쥐어지는 합격목걸이\n        </div>\n      }\n      <Button onClick={() => history.push('/quiz-quiz-minus')}>재도전!</Button>\n    </article>\n  )\n}\n\nexport default ResultPage\n","import React from 'react'\nimport './Intro.scss'\nimport Button from '../../components/Button'\n\ninterface IntroIProps {\n    goNextPage: () => void\n    isLoading: boolean\n}\n\nfunction Intro({goNextPage, isLoading}: IntroIProps):JSX.Element {\n    return (\n        <article className=\"intro-container\">\n          <div className=\"intro\">\n            다섯개의 랜덤 퀴즈를 풀어보세요.<br />\n            아래의 '퀴즈 풀기' 버튼을 누르면 퀴즈가 시작됩니다.\n          </div>\n          <Button className=\"start-button\" onClick={goNextPage} disabled={isLoading}>\n            퀴즈 풀기\n          </Button>\n        </article>\n    )\n}\n\nexport default Intro","import React, { useState, useEffect, useMemo } from 'react'\nimport './index.scss'\nimport Quiz from '../quiz/Quiz'\nimport axios from 'axios'\nimport config from '../../configs/config'\nimport { IQuiz } from '../../models/quiz'\nimport { useHistory } from 'react-router'\nimport { useRouteMatch } from 'react-router-dom'\nimport { Backdrop, CircularProgress } from '@material-ui/core'\nimport ResultPage from '../result/Result'\nimport Button from '../../components/Button'\nimport moment from 'moment'\nimport Intro from '../intro/Intro'\n\nfunction MainPage(): JSX.Element {\n  const match = useRouteMatch<{ index: string }>()\n  const history = useHistory()\n  const search = window.location.search\n  const urlParams = useMemo(() => {\n    return new URLSearchParams(search)\n  }, [search])\n\n\n  const [startTime, setStartTime] = useState(moment())\n\n  const [isOnResultPage, setIsOnResultPage] = useState(false)\n  const [isLoading, setIsLoading] = useState(true)\n\n  const [quizIndex, setQuizIndex] = useState(0)\n  const [quiz, setQuiz] = useState<IQuiz>()\n  const [result, setResult] = useState<boolean[]>([])\n  const [correctAnswer, setCorrectAnswer] = useState('')\n  const [isSelected, setIsSelected] = useState({ selected: false, index: 0 })\n\n  const getQuiz = () => {\n    axios({\n      method: 'get',\n      url: config.url,\n    })\n      .then((response) => {\n        const data = response.data.results[0]\n        const answerList = data.incorrect_answers\n        answerList.push(data.correct_answer)\n\n        setQuiz({\n          question: data.question,\n          correctAnswer: data.correct_answer,\n          answers: shuffleAnswers(answerList),\n        })\n        setCorrectAnswer(data.correct_answer)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const shuffleAnswers = (answers: string[]) => {\n    return answers.sort(() => Math.random() - 0.5)\n  }\n\n  const handleChangeAnswer = (index: number, selectedAnswer: string) => {\n    const arr = result\n    if (result === []) {\n      arr.push(correctAnswer === selectedAnswer)\n    } else {\n      arr[index] = correctAnswer === selectedAnswer\n    }\n    setResult(arr)\n    setIsSelected({ selected: true, index: index })\n  }\n\n  const goNextPage = () => {\n    if (match.params.index === '4') {\n      history.push(`${history.location.pathname}?finished=${true}`)\n    } else {\n      history.push(`/quiz-quiz-minus/${quizIndex}`)\n    }\n    setIsLoading(true)\n  }\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setIsLoading(false)\n    }, 1500)\n\n    setIsSelected({selected: false, index: 0})\n    if (match.params.index) {\n      getQuiz()\n      setQuizIndex(quizIndex + 1)\n    }\n    setIsOnResultPage(urlParams.get('finished') === 'true')\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [match])\n\n  return (\n    <div className=\"main-page-container\">\n      <Backdrop open={isLoading} onClick={() => console.log('loading')}>\n        <CircularProgress />\n      </Backdrop>\n      {isOnResultPage ? (\n        <ResultPage result={result} startTime={startTime} />\n      ) : match.params.index ? (\n        <Quiz\n          quiz={quiz}\n          onSelectAnswer={(index: number, selectedAnswer: string) =>\n            handleChangeAnswer(index, selectedAnswer)\n          }\n          onGoNextPage={goNextPage}\n          isSelected={isSelected}\n          isLoading={isLoading}\n        />\n      ) : (\n        <Intro goNextPage={goNextPage} isLoading={isLoading}/>\n      )}\n    </div>\n  )\n}\n\nexport default MainPage\n","import { RouteConfig } from 'react-router-config'\nimport MainLayout from './layouts/main/index'\nimport MainPage from './pages/main/index'\n\nconst routes: RouteConfig[] = [\n  {\n    route: '*',\n    component: MainLayout,\n    routes: [\n      {\n        path: '/quiz-quiz-minus',\n        exact: true,\n        component: MainPage,\n      },\n      {\n        path: '/quiz-quiz-minus/:index',\n        exact: true,\n        component: MainPage,\n      },\n    ],\n  },\n]\n\nexport default routes\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport routes from './routes'\nimport { renderRoutes } from 'react-router-config'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <>\n    <BrowserRouter>{renderRoutes(routes)}</BrowserRouter>\n  </>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}